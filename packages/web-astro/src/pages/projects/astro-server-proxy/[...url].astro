---
import Layout from "../../../layouts/Layout.astro";
import {
    isAllowedDomain,
    getDomainFromUrl,
} from "../../../config/allowedDomains";

// 添加 getStaticPaths 函数以支持静态部署
export function getStaticPaths() {
    return [];
}

// 获取目标 URL 的函数，从路径参数中获取
function getTargetUrl(params: Record<string, string | undefined>) {
    try {
        if (params.url) {
            try {
                // 尝试解码路径参数
                const decodedUrl = decodeURIComponent(params.url);
                
                // 确保有协议前缀
                let fullUrl = decodedUrl;
                if (!decodedUrl.startsWith('http://') && !decodedUrl.startsWith('https://')) {
                    fullUrl = `https://${decodedUrl}`;
                }
                
                // 验证 URL 和域名
                if (isAllowedDomain(fullUrl)) {
                    console.log("Valid URL from path parameter:", fullUrl);
                    return {
                        url: fullUrl,
                        domain: getDomainFromUrl(fullUrl),
                    };
                } else {
                    console.log("Domain not allowed:", fullUrl);
                }
            } catch (e) {
                console.error("Error parsing path URL:", params.url, e);
            }
        } else {
            console.log("No path URL parameter found");
        }
    } catch (e) {
        console.error("Error in getTargetUrl:", e);
    }
    return null;
}

const urlInfo = getTargetUrl(Astro.params);

// 如果没有有效的 URL，重定向到主页面
if (!urlInfo) {
    return Astro.redirect("/projects/astro-server-proxy");
}
---

<Layout title={`${urlInfo.domain} - 服务器代理 - Home 2025`}>
    <div
        class="min-h-screen bg-gradient-to-b from-gray-50 to-white dark:from-gray-900 dark:to-gray-800"
    >
        <div class="max-w-7xl mx-auto py-4 px-4 sm:px-6 lg:px-8">
            <div
                class="bg-white dark:bg-gray-800 rounded-xl shadow-lg overflow-hidden"
            >
                <div
                    class="p-4 border-b border-gray-200 dark:border-gray-700 flex items-center justify-between"
                >
                    <div class="flex items-center space-x-4">
                        <a
                            href="/projects"
                            class="text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-white"
                        >
                            <svg
                                class="w-6 h-6"
                                fill="none"
                                stroke="currentColor"
                                viewBox="0 0 24 24"
                            >
                                <path
                                    stroke-linecap="round"
                                    stroke-linejoin="round"
                                    stroke-width="2"
                                    d="M10 19l-7-7m0 0l7-7m-7 7h18"></path>
                            </svg>
                        </a>
                        <h1
                            class="text-xl font-semibold text-gray-900 dark:text-white truncate"
                            id="domain-title"
                        >
                            {urlInfo.domain}
                        </h1>
                    </div>
                    <a
                        href={urlInfo.url}
                        target="_blank"
                        rel="noopener noreferrer"
                        class="text-indigo-600 dark:text-indigo-400 hover:text-indigo-700 dark:hover:text-indigo-300"
                        id="open-new-tab"
                    >
                        <span class="sr-only">在新窗口打开</span>
                        <svg
                            class="w-6 h-6"
                            fill="none"
                            stroke="currentColor"
                            viewBox="0 0 24 24"
                        >
                            <path
                                stroke-linecap="round"
                                stroke-linejoin="round"
                                stroke-width="2"
                                d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"
                            ></path>
                        </svg>
                    </a>
                </div>
                <div
                    class="relative w-full"
                    style="height: calc(100vh - 120px);"
                >
                    <div
                        class="absolute inset-0 w-full h-full px-2 py-2 overflow-auto"
                        id="proxy-content"
                    >
                        <div id="loading" class="flex items-center justify-center h-full">
                            <div class="text-center">
                                <div class="animate-spin rounded-full h-12 w-12 border-b-2 border-indigo-500"></div>
                                <p class="mt-4 text-gray-600 dark:text-gray-400">正在加载...</p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</Layout>

<script>
    // 从 URL 中获取域名
    function getDomainFromUrl(url: string): string {
        try {
            return new URL(url).hostname;
        } catch (e) {
            console.error("Invalid URL:", e);
            return "";
        }
    }

    // 获取当前页面的 URL 参数
    function getCurrentUrl(): string | null {
        const pathParts = window.location.pathname.split('/');
        const lastPart = pathParts[pathParts.length - 1];
        if (lastPart) {
            try {
                return decodeURIComponent(lastPart);
            } catch (e) {
                console.error("Error decoding URL:", e);
            }
        }
        return null;
    }

    // 加载并显示内容
    async function loadContent(url: string) {
        try {
            const proxyContent = document.getElementById('proxy-content');
            if (!proxyContent) return;

            // 显示加载状态
            proxyContent.innerHTML = `
                <div class="flex items-center justify-center h-full">
                    <div class="text-center">
                        <div class="animate-spin rounded-full h-12 w-12 border-b-2 border-indigo-500"></div>
                        <p class="mt-4 text-gray-600 dark:text-gray-400">正在加载...</p>
                    </div>
                </div>
            `;

            // 使用 CORS 代理服务
            const corsProxyUrl = `https://cors-www.lilnong.top/${url}`;
            
            try {
                const response = await fetch(corsProxyUrl);
                const contentType = response.headers.get('content-type');
                
                if (contentType?.includes('text/html')) {
                    const html = await response.text();
                    proxyContent.innerHTML = `
                        <iframe
                            srcdoc="${html.replace(/"/g, '&quot;')}"
                            class="w-full h-full border-0"
                            sandbox="allow-scripts allow-same-origin allow-forms"
                            loading="lazy"
                        ></iframe>
                    `;
                } else {
                    // 对于非 HTML 内容，直接在新窗口打开
                    window.open(corsProxyUrl, '_blank');
                    proxyContent.innerHTML = `
                        <div class="flex items-center justify-center h-full">
                            <div class="text-center">
                                <p class="text-gray-600 dark:text-gray-400">
                                    此类型的内容已在新窗口中打开
                                </p>
                            </div>
                        </div>
                    `;
                }
            } catch (error) {
                proxyContent.innerHTML = `
                    <div class="flex items-center justify-center h-full">
                        <div class="text-center">
                            <p class="text-red-600 dark:text-red-400">
                                加载失败：${error.message}
                            </p>
                        </div>
                    </div>
                `;
            }
        } catch (e) {
            console.error("Error loading content:", e);
        }
    }

    // 页面加载完成后执行
    document.addEventListener('DOMContentLoaded', () => {
        const url = getCurrentUrl();
        if (url) {
            loadContent(url);
        }
    });
</script>

<style>
    iframe {
        background: transparent;
    }
</style>
